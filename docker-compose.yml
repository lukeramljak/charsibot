services:
  discord:
    build:
      context: ./apps/discord
      dockerfile: ./Dockerfile
    container_name: discord
    restart: unless-stopped
    environment:
      - DISCORD_CLIENT_ID
      - DISCORD_GUILD_ID
      - DISCORD_TOKEN

  twitch:
    build:
      context: ./apps/twitch
      dockerfile: ./Dockerfile
    container_name: twitch
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - twitch-data:/data
    environment:
      - LOG_LEVEL
      - WS_PORT=8081
      - DB_PATH=/data/charsibot.db
      - TWITCH_CLIENT_ID
      - TWITCH_CLIENT_SECRET
      - TWITCH_OAUTH_TOKEN
      - TWITCH_REFRESH_TOKEN
      - TWITCH_BOT_OAUTH_TOKEN
      - TWITCH_BOT_REFRESH_TOKEN
      - TWITCH_BOT_USER_ID
      - TWITCH_CHANNEL_USER_ID

  twitch-overlay:
    build:
      context: ./apps/twitch-overlay
      dockerfile: ./Dockerfile
    container_name: twitch-overlay
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - twitch
    environment:
      - PUBLIC_TWITCH_WEBSOCKET_URL

  twitch-db-backup:
    image: offen/docker-volume-backup:latest
    restart: always
    environment:
      - BACKUP_FILENAME=charsibot-db-backup-%Y-%m-%dT%H-%M-%S.tar.gz
      - BACKUP_CRON_EXPRESSION=0 2 * * *
      - BACKUP_RETENTION_DAYS=7
      - AWS_S3_PATH=${BACKUP_AWS_S3_PATH}
      - AWS_S3_BUCKET_NAME=${BACKUP_AWS_S3_BUCKET_NAME}
      - AWS_ENDPOINT=${BACKUP_AWS_ENDPOINT}
      - AWS_ACCESS_KEY_ID=${BACKUP_AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${BACKUP_AWS_SECRET_ACCESS_KEY}
    volumes:
      - twitch-data:/backup/twitch-data:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  twitch-data:
